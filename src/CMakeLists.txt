
set(LIB_SOURCES
        open62541.c
        open62541objects.cpp
        open62541client.cpp
        open62541server.cpp
        clientcache.cpp
        clientcachethread.cpp
        nodecontext.cpp
        serverrepeatedcallback.cpp
        servermethod.cpp
        serverobjecttype.cpp
        clientbrowser.cpp
        monitoreditem.cpp
        clientsubscription.cpp
        discoveryserver.cpp
        servernodetree.cpp
        historydatabase.cpp
        )


add_library(OBJS OBJECT ${LIB_SOURCES})

# Building shared library

set_property(TARGET OBJS PROPERTY POSITION_INDEPENDENT_CODE ON)
add_library(${OPEN62541_CPP} SHARED $<TARGET_OBJECTS:OBJS>)

target_link_libraries(${OPEN62541_CPP} ws2_32)

## set the shared library soname
set_target_properties(${OPEN62541_CPP} PROPERTIES
        VERSION ${PACKAGE_VERSION}
        SOVERSION ${VERSION_MAJOR})

include(CMakePackageConfigHelpers)
configure_package_config_file(open62541cppConfig.cmake.in
        ${CMAKE_CURRENT_BINARY_DIR}/open62541cppConfig.cmake
        INSTALL_DESTINATION ${LIB_INSTALL_DIR}/${OPEN62541_CPP}/cmake
        PATH_VARS INCLUDE_INSTALL_DIR LIB_INSTALL_DIR
        )

write_basic_package_version_file(
        ${CMAKE_CURRENT_BINARY_DIR}/${OPEN62541_CPP}ConfigVersion.cmake
        VERSION ${PACKAGE_VERSION}
        COMPATIBILITY SameMajorVersion)

install(FILES ${CMAKE_CURRENT_BINARY_DIR}/${OPEN62541_CPP}Config.cmake
        ${CMAKE_CURRENT_BINARY_DIR}/${OPEN62541_CPP}ConfigVersion.cmake
        DESTINATION ${LIB_INSTALL_DIR}/${OPEN62541_CPP}/cmake )

## install the shared library
install(TARGETS ${OPEN62541_CPP}
        ARCHIVE DESTINATION lib
        LIBRARY DESTINATION lib
        RUNTIME DESTINATION bin
        INCLUDES DESTINSTION include
        )
